<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:p="http://www.springframework.org/schema/p"
   	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd">
		
		<!-- Spring入门的配置 -->
		<bean id="UserDao" class="spring.demo1.UserDaoImpl">
			<property name="name" value="李明"></property>
		
		</bean>
		
        <!-- Spring的bean的声明周期的配置 -->
        <bean id="CustomerDao" class="spring.demo2.CustomerDaoImpl" scope="prototype" init-method="setup" destroy-method="destroy">
        
        </bean>
        
        
        <!-- Spring属性注入的方式 -->
        <!-- 构造方法的方式 -->
        <bean id="car" class="spring.demo3.Car">
    		<constructor-arg name="name" value="宝马"/>
        	<constructor-arg name="price" value="800000"/> 
        	
        </bean>
        
        <!-- set方法的方式 -->
   <!--      <bean id="car2" class="spring.demo3.Car2">
        	<property name="name" value="奔驰"/>
        	<property name="price" value="1000000"/>
        </bean>
         -->
          
        <!-- 改为p名称空间的方式 -->
        <!-- <bean id="car2" class="spring.demo3.Car2" p:name="奇瑞qq" p:price="30000"></bean> -->
        
         <!-- set方法注入对象类型的属性 -->
      <!--    <bean id="employee" class="spring.demo3.Employee">
        	<property name="name" value="涛哥"/>
         value:设置普通属性类型的值  ref:用来设置其他类的id和name 
        	<property name="car2" ref="car2"/>
        </bean> 
     -->
        
        <!-- p名称空间的方式来注入对象类型 -->
      <!--   <bean id="employee" class="spring.demo3.Employee" p:name="王东" p:car2-ref="car2"></bean> -->
        
          
        <!-- SpEL方式属性注入 -->
        <bean id="car2" class="spring.demo3.Car2">
        	<property name="name" value="#{'摩托车'}"></property>
        	<property name="price" value="#{3000}"></property>
        </bean>
        
          <bean id="employee" class="spring.demo3.Employee">
        	<property name="name" value="#{'张三'}"></property>
        	<property name="car2" value="#{car2}"></property>
        </bean>
        
</beans>
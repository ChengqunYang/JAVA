<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd"> <!-- bean definitions here -->

	<!-- 配置目标对象:倍增强的对象 -->
	<bean id="productDao" class="spring.demo2.ProductDaoImpl"/>
	<!-- 将切面类交给Spring管理 -->
	<bean id="myAspect" class="spring.demo2.MyAspectXML"/>
	<!-- 通过AOP的配置完成对目标类产生代理-->
	<aop:config>
		<!-- expression=表达式的配置来决定哪些类的那些方法需要进行增强(切入点) -->
		<aop:pointcut expression="execution(* spring.demo2.ProductDaoImpl.save(..))" id="pointcut1"/>   
		<aop:pointcut expression="execution(* spring.demo2.ProductDaoImpl.delete(..))" id="pointcut2"/>   
		<aop:pointcut expression="execution(* spring.demo2.ProductDaoImpl.update(..))" id="pointcut3"/>   
		<aop:pointcut expression="execution(* spring.demo2.ProductDaoImpl.find(..))" id="pointcut4"/>		
		
		<!-- 配置切面 -->
		<aop:aspect ref="myAspect">
				<!-- 前置通知 -->
				<!-- 在pointcut1这个切入点的前面应用checkPri方法 -->
			<aop:before method="checkPri" pointcut-ref="pointcut1"/>
			
				<!-- 后置通知 -->
				<!-- 在pointcut2这个切入点的后面应用writelog方法 -->
			<aop:after-returning method="writelog" pointcut-ref="pointcut2" returning="result"/>
			
				<!-- 环绕通知 -->
				<!-- 在pointcut3这个切入点环绕around方法 -->
			<aop:around method="around" pointcut-ref="pointcut3"/>	
			
			<!-- 异常抛出通知通知 -->
				<!-- 在pointcut3这个切入点加入异常抛出通知afterThrowing方法 -->
			<aop:around method="afterThrowing" pointcut-ref="pointcut4"/>	
		</aop:aspect>
	</aop:config>
</beans>
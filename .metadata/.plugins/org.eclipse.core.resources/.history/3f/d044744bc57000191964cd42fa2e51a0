package spring.demo1;

import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.AfterReturning;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;

/**
 * 切面类:注解的切面类
 * @author DELL
 *
 */
//将该类识别为一个切面
@Aspect
public class MyAspectAnno {
	//前置通知
	@Before(value="execution(* spring.demo1.OrderDao.save(..))" )
	public void before(){
		System.out.println("前置增强...");
	}
	//后置通知
	@AfterReturning(value="execution(* spring.demo1.OrderDao.delete(..))",returning="result")
	public void afterReturning(Object result){
		System.out.println("后置增强..."+result);
	}
	//环绕通知
	@Around(value="execution(* spring.demo1.OrderDao.update(..))")
	public Object around(ProceedingJoinPoint joinPoint){
		System.out.println("环绕前增强...");
		Object obj = joinPoint.
		System.out.println("环绕后增强...");
	}
}
